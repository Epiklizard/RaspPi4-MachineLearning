from tflite_support.metadata_writers import object_detector
from tflite_support.metadata_writers import writer_utils
from tflite_support import metadata

ObjectDetectorWriter = object_detector.MetadataWriter
_MODEL_PATH = "mobilenet.tflite"
_LABEL_FILE = "training/labelmap.pbtxt"
_SAVE_TO_PATH = "mobilenet1.tflite"

_INPUT_NORM_MEAN = 127.5
_INPUT_NORM_STD = 127.5

# Create the metadata writer.
writer = ObjectDetectorWriter.create_for_inference(
    writer_utils.load_file(_MODEL_PATH), [_INPUT_NORM_MEAN], [_INPUT_NORM_STD],
    [_LABEL_FILE])

# Verify the metadata generated by metadata writer.
print(writer.get_metadata_json())

# Populate the metadata into the model.
writer_utils.save_file(writer.populate(), _SAVE_TO_PATH)


# _MODEL_PATH = "ssd_mobilenet_v1.tflite"
# _LABEL_FILE = "ssd_mobilenet_labels.txt"
# _SAVE_TO_PATH = "mobilenet2.tflite"

# writer = ObjectDetectorWriter.create_for_inference(
# writer_utils.load_file(_MODEL_PATH), [127.5], [127.5], [_LABEL_FILE])
# writer_utils.save_file(writer.populate(), _SAVE_TO_PATH)

# # Verify the populated metadata and associated files.
# displayer = metadata.MetadataDisplayer.with_model_file(_SAVE_TO_PATH)
# print("Metadata populated:")
# print(displayer.get_metadata_json())
# print("Associated file(s) populated:")
# print(displayer.get_packed_associated_file_list())
